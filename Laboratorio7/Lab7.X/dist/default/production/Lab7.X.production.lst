

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 11:25:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  01E6                     __pidataBANK0:
   216                           
   217                           ;initializer for _Table
   218  01E6  343F               	retlw	63
   219  01E7  3406               	retlw	6
   220  01E8  345B               	retlw	91
   221  01E9  344F               	retlw	79
   222  01EA  3466               	retlw	102
   223  01EB  346D               	retlw	109
   224  01EC  347D               	retlw	125
   225  01ED  3407               	retlw	7
   226  01EE  347F               	retlw	127
   227  01EF  346F               	retlw	111
   228                           
   229                           	psect	nvCOMMON
   230  0077                     __pnvCOMMON:
   231  0077                     _Counter:
   232  0077                     	ds	1
   233  0078                     _Storage:
   234  0078                     	ds	1
   235                           
   236                           	psect	nvBANK0
   237  0032                     __pnvBANK0:
   238  0032                     _Unidades:
   239  0032                     	ds	1
   240  0033                     _Decenas:
   241  0033                     	ds	1
   242  0034                     _Centenas:
   243  0034                     	ds	1
   244  0006                     _PORTB	set	6
   245  0005                     _PORTA	set	5
   246  0007                     _PORTC	set	7
   247  0001                     _TMR0	set	1
   248  000B                     _INTCONbits	set	11
   249  0008                     _PORTD	set	8
   250  0006                     _PORTBbits	set	6
   251  0058                     _RBIF	set	88
   252  005A                     _T0IF	set	90
   253  008F                     _OSCCONbits	set	143
   254  0096                     _IOCBbits	set	150
   255  0095                     _WPUB	set	149
   256  0081                     _OPTION_REGbits	set	129
   257  0088                     _TRISD	set	136
   258  0087                     _TRISC	set	135
   259  0086                     _TRISBbits	set	134
   260  0189                     _ANSELH	set	393
   261  0188                     _ANSEL	set	392
   262                           
   263                           	psect	cinit
   264  0011                     start_initialization:	
   265                           ; #config settings
   266                           
   267  0011                     __initialization:
   268                           
   269                           ; Initialize objects allocated to BANK0
   270  0011  1383               	bcf	3,7	;select IRP bank0
   271  0012  302A               	movlw	low (__pdataBANK0+10)
   272  0013  00FD               	movwf	btemp+-1
   273  0014  3001               	movlw	high __pidataBANK0
   274  0015  00FE               	movwf	btemp
   275  0016  30E6               	movlw	low __pidataBANK0
   276  0017  00FF               	movwf	btemp+1
   277  0018  3020               	movlw	low __pdataBANK0
   278  0019  0084               	movwf	4
   279  001A  120A  118A  21C9  120A  118A  	fcall	init_ram0
   280                           
   281                           ; Clear objects allocated to COMMON
   282  001F  01F9               	clrf	__pbssCOMMON& (0+127)
   283  0020  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   284  0021                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  0021                     __end_of__initialization:
   288  0021  0183               	clrf	3
   289  0022  120A  118A  29D8   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMMON
   292  0079                     __pbssCOMMON:
   293  0079                     _var4Displays:
   294  0079                     	ds	2
   295                           
   296                           	psect	dataBANK0
   297  0020                     __pdataBANK0:
   298  0020                     _Table:
   299  0020                     	ds	10
   300                           
   301                           	psect	inittext
   302  01C5                     init_fetch0:	
   303                           ;	Called with low address in FSR and high address in W
   304                           
   305  01C5  087E               	movf	btemp,w
   306  01C6  008A               	movwf	10
   307  01C7  087F               	movf	btemp+1,w
   308  01C8  0082               	movwf	2
   309  01C9                     init_ram0:	
   310                           ;Called with:
   311                           ;	high address of idata address in btemp 
   312                           ;	low address of idata address in btemp+1 
   313                           ;	low address of data in FSR
   314                           ;	high address + 1 of data in btemp-1
   315                           
   316  01C9  120A  118A  21C5  120A  118A  	fcall	init_fetch0
   317  01CE  0080               	movwf	0
   318  01CF  0A84               	incf	4,f
   319  01D0  0804               	movf	4,w
   320  01D1  067D               	xorwf	btemp+-1,w
   321  01D2  1903               	btfsc	3,2
   322  01D3  3400               	retlw	0
   323  01D4  0AFF               	incf	btemp+1,f
   324  01D5  1903               	btfsc	3,2
   325  01D6  0AFE               	incf	btemp,f
   326  01D7  29C9               	goto	init_ram0
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:
   330  0070                     ?_setup:
   331  0070                     ?_nibbles_separation:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_isr:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_isr:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 1 bytes @ 0x0
   345  0070                     	ds	3
   346  0073                     ??_setup:
   347  0073                     ?___awdiv:	
   348                           ; 1 bytes @ 0x3
   349                           
   350  0073                     ?___awmod:	
   351                           ; 2 bytes @ 0x3
   352                           
   353  0073                     ___awdiv@divisor:	
   354                           ; 2 bytes @ 0x3
   355                           
   356  0073                     ___awmod@divisor:	
   357                           ; 2 bytes @ 0x3
   358                           
   359                           
   360                           ; 2 bytes @ 0x3
   361  0073                     	ds	2
   362  0075                     ___awdiv@dividend:
   363  0075                     ___awmod@dividend:	
   364                           ; 2 bytes @ 0x5
   365                           
   366                           
   367                           ; 2 bytes @ 0x5
   368  0075                     	ds	2
   369  0077                     ??_main:
   370                           
   371                           	psect	cstackBANK0
   372  002A                     __pcstackBANK0:	
   373                           ; 1 bytes @ 0x7
   374                           
   375  002A                     ??___awdiv:
   376  002A                     ??___awmod:	
   377                           ; 1 bytes @ 0x0
   378                           
   379                           
   380                           ; 1 bytes @ 0x0
   381  002A                     	ds	1
   382  002B                     ___awdiv@counter:
   383  002B                     ___awmod@counter:	
   384                           ; 1 bytes @ 0x1
   385                           
   386                           
   387                           ; 1 bytes @ 0x1
   388  002B                     	ds	1
   389  002C                     ___awdiv@sign:
   390  002C                     ___awmod@sign:	
   391                           ; 1 bytes @ 0x2
   392                           
   393                           
   394                           ; 1 bytes @ 0x2
   395  002C                     	ds	1
   396  002D                     ___awdiv@quotient:
   397                           
   398                           ; 2 bytes @ 0x3
   399  002D                     	ds	2
   400  002F                     ??_nibbles_separation:
   401                           
   402                           ; 1 bytes @ 0x5
   403  002F                     	ds	3
   404                           
   405                           	psect	maintext
   406  01D8                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 104 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels required when called:    3
   432 ;; This function calls:
   433 ;;		_nibbles_separation
   434 ;;		_setup
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  01D8                     _main:
   443  01D8                     l1079:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;main.c: 105:     setup();
   449  01D8  120A  118A  219C  120A  118A  	fcall	_setup
   450  01DD                     l70:	
   451                           ;main.c: 107:     while(1) {
   452                           
   453                           
   454                           ;main.c: 108:         nibbles_separation();
   455  01DD  120A  118A  208E  120A  118A  	fcall	_nibbles_separation
   456  01E2  29DD               	goto	l70
   457  01E3  120A  118A  280E   	ljmp	start
   458  01E6                     __end_of_main:
   459                           
   460                           	psect	text1
   461  019C                     __ptext1:	
   462 ;; *************** function _setup *****************
   463 ;; Defined at:
   464 ;;		line 114 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; Hardware stack levels required when called:    1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _setup
   494  019C                     _setup:
   495  019C                     l753:	
   496                           ;incstack = 0
   497                           ; Regs used in _setup: [wreg+status,2]
   498                           
   499                           
   500                           ;main.c: 116:     ANSEL = 0x00;
   501  019C  1683               	bsf	3,5	;RP0=1, select bank3
   502  019D  1703               	bsf	3,6	;RP1=1, select bank3
   503  019E  0188               	clrf	8	;volatile
   504                           
   505                           ;main.c: 117:     ANSELH = 0x00;
   506  019F  0189               	clrf	9	;volatile
   507  01A0                     l755:
   508                           
   509                           ;main.c: 119:     TRISBbits.TRISB0 = 1;
   510  01A0  1683               	bsf	3,5	;RP0=1, select bank1
   511  01A1  1303               	bcf	3,6	;RP1=0, select bank1
   512  01A2  1406               	bsf	6,0	;volatile
   513  01A3                     l757:
   514                           
   515                           ;main.c: 120:     TRISBbits.TRISB1 = 1;
   516  01A3  1486               	bsf	6,1	;volatile
   517  01A4                     l759:
   518                           
   519                           ;main.c: 121:     TRISBbits.TRISB2 = 0;
   520  01A4  1106               	bcf	6,2	;volatile
   521  01A5                     l761:
   522                           
   523                           ;main.c: 122:     TRISBbits.TRISB3 = 0;
   524  01A5  1186               	bcf	6,3	;volatile
   525  01A6                     l763:
   526                           
   527                           ;main.c: 123:     TRISBbits.TRISB4 = 0;
   528  01A6  1206               	bcf	6,4	;volatile
   529                           
   530                           ;main.c: 124:     TRISC = 0x00;
   531  01A7  0187               	clrf	7	;volatile
   532                           
   533                           ;main.c: 125:     TRISD = 0x00;
   534  01A8  0188               	clrf	8	;volatile
   535                           
   536                           ;main.c: 129:     PORTA = 0x00;
   537  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   538  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   539  01AB  0185               	clrf	5	;volatile
   540                           
   541                           ;main.c: 130:     PORTB = 0x00;
   542  01AC  0186               	clrf	6	;volatile
   543                           
   544                           ;main.c: 131:     PORTC = 0x00;
   545  01AD  0187               	clrf	7	;volatile
   546                           
   547                           ;main.c: 132:     PORTD = 0x00;
   548  01AE  0188               	clrf	8	;volatile
   549  01AF                     l765:
   550                           
   551                           ;main.c: 136:     OPTION_REGbits.nRBPU = 0;
   552  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   553  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   554  01B1  1381               	bcf	1,7	;volatile
   555  01B2                     l767:
   556                           
   557                           ;main.c: 137:     WPUB = 0b00000011;
   558  01B2  3003               	movlw	3
   559  01B3  0095               	movwf	21	;volatile
   560  01B4                     l769:
   561                           
   562                           ;main.c: 138:     IOCBbits.IOCB0 = 1;
   563  01B4  1416               	bsf	22,0	;volatile
   564  01B5                     l771:
   565                           
   566                           ;main.c: 139:     IOCBbits.IOCB1 = 1;
   567  01B5  1496               	bsf	22,1	;volatile
   568  01B6                     l773:
   569                           
   570                           ;main.c: 143:     OSCCONbits.IRCF2 = 0;
   571  01B6  130F               	bcf	15,6	;volatile
   572  01B7                     l775:
   573                           
   574                           ;main.c: 144:     OSCCONbits.IRCF1 = 1;
   575  01B7  168F               	bsf	15,5	;volatile
   576  01B8                     l777:
   577                           
   578                           ;main.c: 145:     OSCCONbits.IRCF0 = 0;
   579  01B8  120F               	bcf	15,4	;volatile
   580  01B9                     l779:
   581                           
   582                           ;main.c: 146:     OSCCONbits.SCS = 1;
   583  01B9  140F               	bsf	15,0	;volatile
   584  01BA                     l781:
   585                           
   586                           ;main.c: 150:     OPTION_REGbits.T0CS = 0;
   587  01BA  1281               	bcf	1,5	;volatile
   588  01BB                     l783:
   589                           
   590                           ;main.c: 151:     OPTION_REGbits.PSA = 0;
   591  01BB  1181               	bcf	1,3	;volatile
   592  01BC                     l785:
   593                           
   594                           ;main.c: 152:     OPTION_REGbits.PS2 = 1;
   595  01BC  1501               	bsf	1,2	;volatile
   596  01BD                     l787:
   597                           
   598                           ;main.c: 153:     OPTION_REGbits.PS1 = 1;
   599  01BD  1481               	bsf	1,1	;volatile
   600  01BE                     l789:
   601                           
   602                           ;main.c: 154:     OPTION_REGbits.PS0 = 1;
   603  01BE  1401               	bsf	1,0	;volatile
   604  01BF                     l791:
   605                           
   606                           ;main.c: 158:     INTCONbits.GIE = 1;
   607  01BF  178B               	bsf	11,7	;volatile
   608  01C0                     l793:
   609                           
   610                           ;main.c: 159:     INTCONbits.RBIF = 1;
   611  01C0  140B               	bsf	11,0	;volatile
   612  01C1                     l795:
   613                           
   614                           ;main.c: 160:     INTCONbits.RBIE = 1;
   615  01C1  158B               	bsf	11,3	;volatile
   616  01C2                     l797:
   617                           
   618                           ;main.c: 161:     INTCONbits.T0IE = 1;
   619  01C2  168B               	bsf	11,5	;volatile
   620  01C3                     l799:
   621                           
   622                           ;main.c: 162:     INTCONbits.T0IF = 0;
   623  01C3  110B               	bcf	11,2	;volatile
   624  01C4                     l76:
   625  01C4  0008               	return
   626  01C5                     __end_of_setup:
   627                           
   628                           	psect	text2
   629  008E                     __ptext2:	
   630 ;; *************** function _nibbles_separation *****************
   631 ;; Defined at:
   632 ;;		line 167 in file "main.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      unsigned char 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0
   648 ;;      Temps:          0       3       0       0       0
   649 ;;      Totals:         0       3       0       0       0
   650 ;;Total ram usage:        3 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    2
   653 ;; This function calls:
   654 ;;		___awdiv
   655 ;;		___awmod
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _nibbles_separation
   663  008E                     _nibbles_separation:
   664  008E                     l1069:	
   665                           ;incstack = 0
   666                           ; Regs used in _nibbles_separation: [wreg+status,2+status,0+pclath+cstack]
   667                           
   668                           
   669                           ;main.c: 168:     Counter = PORTC;
   670  008E  1283               	bcf	3,5	;RP0=0, select bank0
   671  008F  1303               	bcf	3,6	;RP1=0, select bank0
   672  0090  0807               	movf	7,w	;volatile
   673  0091  00AF               	movwf	??_nibbles_separation
   674  0092  082F               	movf	??_nibbles_separation,w
   675  0093  00F7               	movwf	_Counter
   676  0094                     l1071:
   677                           
   678                           ;main.c: 169:     Centenas = Counter/100;
   679  0094  3064               	movlw	100
   680  0095  00F3               	movwf	___awdiv@divisor
   681  0096  3000               	movlw	0
   682  0097  00F4               	movwf	___awdiv@divisor+1
   683  0098  0877               	movf	_Counter,w
   684  0099  00AF               	movwf	??_nibbles_separation
   685  009A  01B0               	clrf	??_nibbles_separation+1
   686  009B  082F               	movf	??_nibbles_separation,w
   687  009C  00F5               	movwf	___awdiv@dividend
   688  009D  0830               	movf	??_nibbles_separation+1,w
   689  009E  00F6               	movwf	___awdiv@dividend+1
   690  009F  120A  118A  2025  120A  118A  	fcall	___awdiv
   691  00A4  0873               	movf	?___awdiv,w
   692  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   693  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   694  00A7  00B1               	movwf	??_nibbles_separation+2
   695  00A8  0831               	movf	??_nibbles_separation+2,w
   696  00A9  00B4               	movwf	_Centenas
   697  00AA                     l1073:
   698                           
   699                           ;main.c: 170:     Storage = Counter%100;
   700  00AA  3064               	movlw	100
   701  00AB  00F3               	movwf	___awmod@divisor
   702  00AC  3000               	movlw	0
   703  00AD  00F4               	movwf	___awmod@divisor+1
   704  00AE  0877               	movf	_Counter,w
   705  00AF  00AF               	movwf	??_nibbles_separation
   706  00B0  01B0               	clrf	??_nibbles_separation+1
   707  00B1  082F               	movf	??_nibbles_separation,w
   708  00B2  00F5               	movwf	___awmod@dividend
   709  00B3  0830               	movf	??_nibbles_separation+1,w
   710  00B4  00F6               	movwf	___awmod@dividend+1
   711  00B5  120A  118A  20ED  120A  118A  	fcall	___awmod
   712  00BA  0873               	movf	?___awmod,w
   713  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   714  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   715  00BD  00B1               	movwf	??_nibbles_separation+2
   716  00BE  0831               	movf	??_nibbles_separation+2,w
   717  00BF  00F8               	movwf	_Storage
   718  00C0                     l1075:
   719                           
   720                           ;main.c: 171:     Decenas = Storage/10;
   721  00C0  300A               	movlw	10
   722  00C1  00F3               	movwf	___awdiv@divisor
   723  00C2  3000               	movlw	0
   724  00C3  00F4               	movwf	___awdiv@divisor+1
   725  00C4  0878               	movf	_Storage,w
   726  00C5  00AF               	movwf	??_nibbles_separation
   727  00C6  01B0               	clrf	??_nibbles_separation+1
   728  00C7  082F               	movf	??_nibbles_separation,w
   729  00C8  00F5               	movwf	___awdiv@dividend
   730  00C9  0830               	movf	??_nibbles_separation+1,w
   731  00CA  00F6               	movwf	___awdiv@dividend+1
   732  00CB  120A  118A  2025  120A  118A  	fcall	___awdiv
   733  00D0  0873               	movf	?___awdiv,w
   734  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   735  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   736  00D3  00B1               	movwf	??_nibbles_separation+2
   737  00D4  0831               	movf	??_nibbles_separation+2,w
   738  00D5  00B3               	movwf	_Decenas
   739  00D6                     l1077:
   740                           
   741                           ;main.c: 172:     Unidades = Storage%10;
   742  00D6  300A               	movlw	10
   743  00D7  00F3               	movwf	___awmod@divisor
   744  00D8  3000               	movlw	0
   745  00D9  00F4               	movwf	___awmod@divisor+1
   746  00DA  0878               	movf	_Storage,w
   747  00DB  00AF               	movwf	??_nibbles_separation
   748  00DC  01B0               	clrf	??_nibbles_separation+1
   749  00DD  082F               	movf	??_nibbles_separation,w
   750  00DE  00F5               	movwf	___awmod@dividend
   751  00DF  0830               	movf	??_nibbles_separation+1,w
   752  00E0  00F6               	movwf	___awmod@dividend+1
   753  00E1  120A  118A  20ED  120A  118A  	fcall	___awmod
   754  00E6  0873               	movf	?___awmod,w
   755  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   756  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   757  00E9  00B1               	movwf	??_nibbles_separation+2
   758  00EA  0831               	movf	??_nibbles_separation+2,w
   759  00EB  00B2               	movwf	_Unidades
   760  00EC                     l79:
   761  00EC  0008               	return
   762  00ED                     __end_of_nibbles_separation:
   763                           
   764                           	psect	text3
   765  00ED                     __ptext3:	
   766 ;; *************** function ___awmod *****************
   767 ;; Defined at:
   768 ;;		line 5 in file "D:\PrograMicros\pic\sources\c90\common\awmod.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  divisor         2    3[COMMON] int 
   771 ;;  dividend        2    5[COMMON] int 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  sign            1    2[BANK0 ] unsigned char 
   774 ;;  counter         1    1[BANK0 ] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;                  2    3[COMMON] int 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         4       0       0       0       0
   785 ;;      Locals:         0       2       0       0       0
   786 ;;      Temps:          0       1       0       0       0
   787 ;;      Totals:         4       3       0       0       0
   788 ;;Total ram usage:        7 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_nibbles_separation
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function ___awmod
   800  00ED                     ___awmod:
   801  00ED                     l1031:	
   802                           ;incstack = 0
   803                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   804                           
   805  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   806  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   807  00EF  01AC               	clrf	___awmod@sign
   808  00F0                     l1033:
   809  00F0  1FF6               	btfss	___awmod@dividend+1,7
   810  00F1  28F3               	goto	u611
   811  00F2  28F4               	goto	u610
   812  00F3                     u611:
   813  00F3  28FB               	goto	l1039
   814  00F4                     u610:
   815  00F4                     l1035:
   816  00F4  09F5               	comf	___awmod@dividend,f
   817  00F5  09F6               	comf	___awmod@dividend+1,f
   818  00F6  0AF5               	incf	___awmod@dividend,f
   819  00F7  1903               	skipnz
   820  00F8  0AF6               	incf	___awmod@dividend+1,f
   821  00F9                     l1037:
   822  00F9  01AC               	clrf	___awmod@sign
   823  00FA  0AAC               	incf	___awmod@sign,f
   824  00FB                     l1039:
   825  00FB  1FF4               	btfss	___awmod@divisor+1,7
   826  00FC  28FE               	goto	u621
   827  00FD  28FF               	goto	u620
   828  00FE                     u621:
   829  00FE  2904               	goto	l1043
   830  00FF                     u620:
   831  00FF                     l1041:
   832  00FF  09F3               	comf	___awmod@divisor,f
   833  0100  09F4               	comf	___awmod@divisor+1,f
   834  0101  0AF3               	incf	___awmod@divisor,f
   835  0102  1903               	skipnz
   836  0103  0AF4               	incf	___awmod@divisor+1,f
   837  0104                     l1043:
   838  0104  0873               	movf	___awmod@divisor,w
   839  0105  0474               	iorwf	___awmod@divisor+1,w
   840  0106  1903               	btfsc	3,2
   841  0107  2909               	goto	u631
   842  0108  290A               	goto	u630
   843  0109                     u631:
   844  0109  2939               	goto	l1061
   845  010A                     u630:
   846  010A                     l1045:
   847  010A  01AB               	clrf	___awmod@counter
   848  010B  0AAB               	incf	___awmod@counter,f
   849  010C  2918               	goto	l1051
   850  010D                     l1047:
   851  010D  3001               	movlw	1
   852  010E                     u645:
   853  010E  1003               	clrc
   854  010F  0DF3               	rlf	___awmod@divisor,f
   855  0110  0DF4               	rlf	___awmod@divisor+1,f
   856  0111  3EFF               	addlw	-1
   857  0112  1D03               	skipz
   858  0113  290E               	goto	u645
   859  0114                     l1049:
   860  0114  3001               	movlw	1
   861  0115  00AA               	movwf	??___awmod
   862  0116  082A               	movf	??___awmod,w
   863  0117  07AB               	addwf	___awmod@counter,f
   864  0118                     l1051:
   865  0118  1FF4               	btfss	___awmod@divisor+1,7
   866  0119  291B               	goto	u651
   867  011A  291C               	goto	u650
   868  011B                     u651:
   869  011B  290D               	goto	l1047
   870  011C                     u650:
   871  011C                     l1053:
   872  011C  0874               	movf	___awmod@divisor+1,w
   873  011D  0276               	subwf	___awmod@dividend+1,w
   874  011E  1D03               	skipz
   875  011F  2922               	goto	u665
   876  0120  0873               	movf	___awmod@divisor,w
   877  0121  0275               	subwf	___awmod@dividend,w
   878  0122                     u665:
   879  0122  1C03               	skipc
   880  0123  2925               	goto	u661
   881  0124  2926               	goto	u660
   882  0125                     u661:
   883  0125  292C               	goto	l1057
   884  0126                     u660:
   885  0126                     l1055:
   886  0126  0873               	movf	___awmod@divisor,w
   887  0127  02F5               	subwf	___awmod@dividend,f
   888  0128  0874               	movf	___awmod@divisor+1,w
   889  0129  1C03               	skipc
   890  012A  03F6               	decf	___awmod@dividend+1,f
   891  012B  02F6               	subwf	___awmod@dividend+1,f
   892  012C                     l1057:
   893  012C  3001               	movlw	1
   894  012D                     u675:
   895  012D  1003               	clrc
   896  012E  0CF4               	rrf	___awmod@divisor+1,f
   897  012F  0CF3               	rrf	___awmod@divisor,f
   898  0130  3EFF               	addlw	-1
   899  0131  1D03               	skipz
   900  0132  292D               	goto	u675
   901  0133                     l1059:
   902  0133  3001               	movlw	1
   903  0134  02AB               	subwf	___awmod@counter,f
   904  0135  1D03               	btfss	3,2
   905  0136  2938               	goto	u681
   906  0137  2939               	goto	u680
   907  0138                     u681:
   908  0138  291C               	goto	l1053
   909  0139                     u680:
   910  0139                     l1061:
   911  0139  082C               	movf	___awmod@sign,w
   912  013A  1903               	btfsc	3,2
   913  013B  293D               	goto	u691
   914  013C  293E               	goto	u690
   915  013D                     u691:
   916  013D  2943               	goto	l1065
   917  013E                     u690:
   918  013E                     l1063:
   919  013E  09F5               	comf	___awmod@dividend,f
   920  013F  09F6               	comf	___awmod@dividend+1,f
   921  0140  0AF5               	incf	___awmod@dividend,f
   922  0141  1903               	skipnz
   923  0142  0AF6               	incf	___awmod@dividend+1,f
   924  0143                     l1065:
   925  0143  0876               	movf	___awmod@dividend+1,w
   926  0144  00F4               	movwf	?___awmod+1
   927  0145  0875               	movf	___awmod@dividend,w
   928  0146  00F3               	movwf	?___awmod
   929  0147                     l331:
   930  0147  0008               	return
   931  0148                     __end_of___awmod:
   932                           
   933                           	psect	text4
   934  0025                     __ptext4:	
   935 ;; *************** function ___awdiv *****************
   936 ;; Defined at:
   937 ;;		line 5 in file "D:\PrograMicros\pic\sources\c90\common\awdiv.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  divisor         2    3[COMMON] int 
   940 ;;  dividend        2    5[COMMON] int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  quotient        2    3[BANK0 ] int 
   943 ;;  sign            1    2[BANK0 ] unsigned char 
   944 ;;  counter         1    1[BANK0 ] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    3[COMMON] int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         4       0       0       0       0
   955 ;;      Locals:         0       4       0       0       0
   956 ;;      Temps:          0       1       0       0       0
   957 ;;      Totals:         4       5       0       0       0
   958 ;;Total ram usage:        9 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_nibbles_separation
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function ___awdiv
   970  0025                     ___awdiv:
   971  0025                     l987:	
   972                           ;incstack = 0
   973                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   974                           
   975  0025  1283               	bcf	3,5	;RP0=0, select bank0
   976  0026  1303               	bcf	3,6	;RP1=0, select bank0
   977  0027  01AC               	clrf	___awdiv@sign
   978  0028                     l989:
   979  0028  1FF4               	btfss	___awdiv@divisor+1,7
   980  0029  282B               	goto	u511
   981  002A  282C               	goto	u510
   982  002B                     u511:
   983  002B  2833               	goto	l995
   984  002C                     u510:
   985  002C                     l991:
   986  002C  09F3               	comf	___awdiv@divisor,f
   987  002D  09F4               	comf	___awdiv@divisor+1,f
   988  002E  0AF3               	incf	___awdiv@divisor,f
   989  002F  1903               	skipnz
   990  0030  0AF4               	incf	___awdiv@divisor+1,f
   991  0031                     l993:
   992  0031  01AC               	clrf	___awdiv@sign
   993  0032  0AAC               	incf	___awdiv@sign,f
   994  0033                     l995:
   995  0033  1FF6               	btfss	___awdiv@dividend+1,7
   996  0034  2836               	goto	u521
   997  0035  2837               	goto	u520
   998  0036                     u521:
   999  0036  2840               	goto	l1001
  1000  0037                     u520:
  1001  0037                     l997:
  1002  0037  09F5               	comf	___awdiv@dividend,f
  1003  0038  09F6               	comf	___awdiv@dividend+1,f
  1004  0039  0AF5               	incf	___awdiv@dividend,f
  1005  003A  1903               	skipnz
  1006  003B  0AF6               	incf	___awdiv@dividend+1,f
  1007  003C                     l999:
  1008  003C  3001               	movlw	1
  1009  003D  00AA               	movwf	??___awdiv
  1010  003E  082A               	movf	??___awdiv,w
  1011  003F  06AC               	xorwf	___awdiv@sign,f
  1012  0040                     l1001:
  1013  0040  01AD               	clrf	___awdiv@quotient
  1014  0041  01AE               	clrf	___awdiv@quotient+1
  1015  0042                     l1003:
  1016  0042  0873               	movf	___awdiv@divisor,w
  1017  0043  0474               	iorwf	___awdiv@divisor+1,w
  1018  0044  1903               	btfsc	3,2
  1019  0045  2847               	goto	u531
  1020  0046  2848               	goto	u530
  1021  0047                     u531:
  1022  0047  287F               	goto	l1023
  1023  0048                     u530:
  1024  0048                     l1005:
  1025  0048  01AB               	clrf	___awdiv@counter
  1026  0049  0AAB               	incf	___awdiv@counter,f
  1027  004A  2856               	goto	l1011
  1028  004B                     l1007:
  1029  004B  3001               	movlw	1
  1030  004C                     u545:
  1031  004C  1003               	clrc
  1032  004D  0DF3               	rlf	___awdiv@divisor,f
  1033  004E  0DF4               	rlf	___awdiv@divisor+1,f
  1034  004F  3EFF               	addlw	-1
  1035  0050  1D03               	skipz
  1036  0051  284C               	goto	u545
  1037  0052                     l1009:
  1038  0052  3001               	movlw	1
  1039  0053  00AA               	movwf	??___awdiv
  1040  0054  082A               	movf	??___awdiv,w
  1041  0055  07AB               	addwf	___awdiv@counter,f
  1042  0056                     l1011:
  1043  0056  1FF4               	btfss	___awdiv@divisor+1,7
  1044  0057  2859               	goto	u551
  1045  0058  285A               	goto	u550
  1046  0059                     u551:
  1047  0059  284B               	goto	l1007
  1048  005A                     u550:
  1049  005A                     l1013:
  1050  005A  3001               	movlw	1
  1051  005B                     u565:
  1052  005B  1003               	clrc
  1053  005C  0DAD               	rlf	___awdiv@quotient,f
  1054  005D  0DAE               	rlf	___awdiv@quotient+1,f
  1055  005E  3EFF               	addlw	-1
  1056  005F  1D03               	skipz
  1057  0060  285B               	goto	u565
  1058  0061  0874               	movf	___awdiv@divisor+1,w
  1059  0062  0276               	subwf	___awdiv@dividend+1,w
  1060  0063  1D03               	skipz
  1061  0064  2867               	goto	u575
  1062  0065  0873               	movf	___awdiv@divisor,w
  1063  0066  0275               	subwf	___awdiv@dividend,w
  1064  0067                     u575:
  1065  0067  1C03               	skipc
  1066  0068  286A               	goto	u571
  1067  0069  286B               	goto	u570
  1068  006A                     u571:
  1069  006A  2872               	goto	l1019
  1070  006B                     u570:
  1071  006B                     l1015:
  1072  006B  0873               	movf	___awdiv@divisor,w
  1073  006C  02F5               	subwf	___awdiv@dividend,f
  1074  006D  0874               	movf	___awdiv@divisor+1,w
  1075  006E  1C03               	skipc
  1076  006F  03F6               	decf	___awdiv@dividend+1,f
  1077  0070  02F6               	subwf	___awdiv@dividend+1,f
  1078  0071                     l1017:
  1079  0071  142D               	bsf	___awdiv@quotient,0
  1080  0072                     l1019:
  1081  0072  3001               	movlw	1
  1082  0073                     u585:
  1083  0073  1003               	clrc
  1084  0074  0CF4               	rrf	___awdiv@divisor+1,f
  1085  0075  0CF3               	rrf	___awdiv@divisor,f
  1086  0076  3EFF               	addlw	-1
  1087  0077  1D03               	skipz
  1088  0078  2873               	goto	u585
  1089  0079                     l1021:
  1090  0079  3001               	movlw	1
  1091  007A  02AB               	subwf	___awdiv@counter,f
  1092  007B  1D03               	btfss	3,2
  1093  007C  287E               	goto	u591
  1094  007D  287F               	goto	u590
  1095  007E                     u591:
  1096  007E  285A               	goto	l1013
  1097  007F                     u590:
  1098  007F                     l1023:
  1099  007F  082C               	movf	___awdiv@sign,w
  1100  0080  1903               	btfsc	3,2
  1101  0081  2883               	goto	u601
  1102  0082  2884               	goto	u600
  1103  0083                     u601:
  1104  0083  2889               	goto	l1027
  1105  0084                     u600:
  1106  0084                     l1025:
  1107  0084  09AD               	comf	___awdiv@quotient,f
  1108  0085  09AE               	comf	___awdiv@quotient+1,f
  1109  0086  0AAD               	incf	___awdiv@quotient,f
  1110  0087  1903               	skipnz
  1111  0088  0AAE               	incf	___awdiv@quotient+1,f
  1112  0089                     l1027:
  1113  0089  082E               	movf	___awdiv@quotient+1,w
  1114  008A  00F4               	movwf	?___awdiv+1
  1115  008B  082D               	movf	___awdiv@quotient,w
  1116  008C  00F3               	movwf	?___awdiv
  1117  008D                     l318:
  1118  008D  0008               	return
  1119  008E                     __end_of___awdiv:
  1120                           
  1121                           	psect	text5
  1122  0148                     __ptext5:	
  1123 ;; *************** function _isr *****************
  1124 ;; Defined at:
  1125 ;;		line 64 in file "main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          3       0       0       0       0
  1142 ;;      Totals:         3       0       0       0       0
  1143 ;;Total ram usage:        3 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		Interrupt level 1
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _isr
  1154  0148                     _isr:
  1155  0148                     i1l945:
  1156                           
  1157                           ;main.c: 66:     if(T0IF == 1) {
  1158  0148  1D0B               	btfss	11,2	;volatile
  1159  0149  294B               	goto	u45_21
  1160  014A  294C               	goto	u45_20
  1161  014B                     u45_21:
  1162  014B  297E               	goto	i1l973
  1163  014C                     u45_20:
  1164  014C                     i1l947:
  1165                           
  1166                           ;main.c: 67:         PORTBbits.RB4 = 0;
  1167  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1168  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1169  014E  1206               	bcf	6,4	;volatile
  1170                           
  1171                           ;main.c: 68:         PORTBbits.RB2 = 1;
  1172  014F  1506               	bsf	6,2	;volatile
  1173  0150                     i1l949:
  1174                           
  1175                           ;main.c: 69:         PORTD = (Table[Centenas]);
  1176  0150  0834               	movf	_Centenas,w
  1177  0151  3E20               	addlw	(low (_Table| 0))& (0+255)
  1178  0152  0084               	movwf	4
  1179  0153  1383               	bcf	3,7	;select IRP bank0
  1180  0154  0800               	movf	0,w
  1181  0155  0088               	movwf	8	;volatile
  1182  0156                     i1l951:
  1183                           
  1184                           ;main.c: 70:         var4Displays = 0b00000001;
  1185  0156  3001               	movlw	1
  1186  0157  00F9               	movwf	_var4Displays
  1187  0158  3000               	movlw	0
  1188  0159  00FA               	movwf	_var4Displays+1
  1189  015A                     i1l953:
  1190                           
  1191                           ;main.c: 72:     if (var4Displays == 0b00000001) {
  1192  015A  0379               	decf	_var4Displays,w
  1193  015B  047A               	iorwf	_var4Displays+1,w
  1194  015C  1D03               	btfss	3,2
  1195  015D  295F               	goto	u46_21
  1196  015E  2960               	goto	u46_20
  1197  015F                     u46_21:
  1198  015F  296B               	goto	i1l961
  1199  0160                     u46_20:
  1200  0160                     i1l955:
  1201                           
  1202                           ;main.c: 73:         PORTBbits.RB2 = 0;
  1203  0160  1106               	bcf	6,2	;volatile
  1204                           
  1205                           ;main.c: 74:         PORTBbits.RB3 = 1;
  1206  0161  1586               	bsf	6,3	;volatile
  1207  0162                     i1l957:
  1208                           
  1209                           ;main.c: 75:         PORTD = (Table[Decenas]);
  1210  0162  0833               	movf	_Decenas,w
  1211  0163  3E20               	addlw	(low (_Table| 0))& (0+255)
  1212  0164  0084               	movwf	4
  1213  0165  0800               	movf	0,w
  1214  0166  0088               	movwf	8	;volatile
  1215  0167                     i1l959:
  1216                           
  1217                           ;main.c: 76:         var4Displays = 0b00000010;
  1218  0167  3002               	movlw	2
  1219  0168  00F9               	movwf	_var4Displays
  1220  0169  3000               	movlw	0
  1221  016A  00FA               	movwf	_var4Displays+1
  1222  016B                     i1l961:
  1223                           
  1224                           ;main.c: 79:     if (var4Displays == 0b00000010) {
  1225  016B  3002               	movlw	2
  1226  016C  0679               	xorwf	_var4Displays,w
  1227  016D  047A               	iorwf	_var4Displays+1,w
  1228  016E  1D03               	btfss	3,2
  1229  016F  2971               	goto	u47_21
  1230  0170  2972               	goto	u47_20
  1231  0171                     u47_21:
  1232  0171  297B               	goto	i1l969
  1233  0172                     u47_20:
  1234  0172                     i1l963:
  1235                           
  1236                           ;main.c: 80:         PORTBbits.RB3 = 0;
  1237  0172  1186               	bcf	6,3	;volatile
  1238                           
  1239                           ;main.c: 81:         PORTBbits.RB4 = 1;
  1240  0173  1606               	bsf	6,4	;volatile
  1241  0174                     i1l965:
  1242                           
  1243                           ;main.c: 82:         PORTD = (Table[Unidades]);
  1244  0174  0832               	movf	_Unidades,w
  1245  0175  3E20               	addlw	(low (_Table| 0))& (0+255)
  1246  0176  0084               	movwf	4
  1247  0177  0800               	movf	0,w
  1248  0178  0088               	movwf	8	;volatile
  1249  0179                     i1l967:
  1250                           
  1251                           ;main.c: 83:         var4Displays = 0b00000000;
  1252  0179  01F9               	clrf	_var4Displays
  1253  017A  01FA               	clrf	_var4Displays+1
  1254  017B                     i1l969:
  1255                           
  1256                           ;main.c: 86:     INTCONbits.T0IF = 0;
  1257  017B  110B               	bcf	11,2	;volatile
  1258  017C                     i1l971:
  1259                           
  1260                           ;main.c: 87:     TMR0 = 255;
  1261  017C  30FF               	movlw	255
  1262  017D  0081               	movwf	1	;volatile
  1263  017E                     i1l973:
  1264                           
  1265                           ;main.c: 91:     if (RBIF == 1) {
  1266  017E  1C0B               	btfss	11,0	;volatile
  1267  017F  2981               	goto	u48_21
  1268  0180  2982               	goto	u48_20
  1269  0181                     u48_21:
  1270  0181  2993               	goto	i1l65
  1271  0182                     u48_20:
  1272  0182                     i1l975:
  1273                           
  1274                           ;main.c: 92:         if (PORTBbits.RB0 == 0) {
  1275  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0184  1806               	btfsc	6,0	;volatile
  1278  0185  2987               	goto	u49_21
  1279  0186  2988               	goto	u49_20
  1280  0187                     u49_21:
  1281  0187  298B               	goto	i1l979
  1282  0188                     u49_20:
  1283  0188                     i1l977:
  1284                           
  1285                           ;main.c: 93:             PORTC = PORTC + 1;
  1286  0188  0807               	movf	7,w	;volatile
  1287  0189  3E01               	addlw	1
  1288  018A  0087               	movwf	7	;volatile
  1289  018B                     i1l979:
  1290                           
  1291                           ;main.c: 95:         if (PORTBbits.RB1 == 0) {
  1292  018B  1886               	btfsc	6,1	;volatile
  1293  018C  298E               	goto	u50_21
  1294  018D  298F               	goto	u50_20
  1295  018E                     u50_21:
  1296  018E  2992               	goto	i1l983
  1297  018F                     u50_20:
  1298  018F                     i1l981:
  1299                           
  1300                           ;main.c: 96:             PORTC = PORTC - 1;
  1301  018F  0807               	movf	7,w	;volatile
  1302  0190  3EFF               	addlw	255
  1303  0191  0087               	movwf	7	;volatile
  1304  0192                     i1l983:
  1305                           
  1306                           ;main.c: 98:         INTCONbits.RBIF = 0;
  1307  0192  100B               	bcf	11,0	;volatile
  1308  0193                     i1l65:
  1309  0193  0872               	movf	??_isr+2,w
  1310  0194  008A               	movwf	10
  1311  0195  0871               	movf	??_isr+1,w
  1312  0196  0084               	movwf	4
  1313  0197  0E70               	swapf	??_isr,w
  1314  0198  0083               	movwf	3
  1315  0199  0EFE               	swapf	btemp,f
  1316  019A  0E7E               	swapf	btemp,w
  1317  019B  0009               	retfie
  1318  019C                     __end_of_isr:
  1319  007E                     btemp	set	126	;btemp
  1320  007E                     wtemp0	set	126
  1321                           
  1322                           	psect	intentry
  1323  0004                     __pintentry:	
  1324                           ;incstack = 0
  1325                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1326                           
  1327  0004                     interrupt_function:
  1328  007E                     saved_w	set	btemp
  1329  0004  00FE               	movwf	btemp
  1330  0005  0E03               	swapf	3,w
  1331  0006  00F0               	movwf	??_isr
  1332  0007  0804               	movf	4,w
  1333  0008  00F1               	movwf	??_isr+1
  1334  0009  080A               	movf	10,w
  1335  000A  00F2               	movwf	??_isr+2
  1336  000B  120A  118A  2948   	ljmp	_isr
  1337                           
  1338                           	psect	config
  1339                           
  1340                           ;Config register CONFIG1 @ 0x2007
  1341                           ;	Oscillator Selection bits
  1342                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1343                           ;	Watchdog Timer Enable bit
  1344                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1345                           ;	Power-up Timer Enable bit
  1346                           ;	PWRTE = OFF, PWRT disabled
  1347                           ;	RE3/MCLR pin function select bit
  1348                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1349                           ;	Code Protection bit
  1350                           ;	CP = OFF, Program memory code protection is disabled
  1351                           ;	Data Code Protection bit
  1352                           ;	CPD = OFF, Data memory code protection is disabled
  1353                           ;	Brown Out Reset Selection bits
  1354                           ;	BOREN = OFF, BOR disabled
  1355                           ;	Internal External Switchover bit
  1356                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1357                           ;	Fail-Safe Clock Monitor Enabled bit
  1358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1359                           ;	Low Voltage Programming Enable bit
  1360                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1361                           ;	In-Circuit Debugger Mode bit
  1362                           ;	DEBUG = 0x1, unprogrammed default
  1363  2007                     	org	8199
  1364  2007  20D4               	dw	8404
  1365                           
  1366                           ;Config register CONFIG2 @ 0x2008
  1367                           ;	Brown-out Reset Selection bit
  1368                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1369                           ;	Flash Program Memory Self Write Enable bits
  1370                           ;	WRT = OFF, Write protection off
  1371  2008                     	org	8200
  1372  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      8      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _nibbles_separation->___awdiv
    _nibbles_separation->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_nibbles_separation
    _nibbles_separation->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1598
                 _nibbles_separation
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nibbles_separation                                   3     3      0    1598
                                              5 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nibbles_separation
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 11:25:37 2021

                          pc 0002                           l70 01DD                           l76 01C4  
                         l79 00EC                 ___awdiv@sign 002C                           fsr 0004  
                        l331 0147                          l318 008D                          l761 01A5  
                        l753 019C                          l771 01B5                          l763 01A6  
                        l755 01A0                          l781 01BA                          l773 01B6  
                        l765 01AF                          l757 01A3                          l791 01BF  
                        l783 01BB                          l775 01B7                          l767 01B2  
                        l759 01A4                          l793 01C0                          l785 01BC  
                        l777 01B8                          l769 01B4                          l795 01C1  
                        l787 01BD                          l779 01B9                          l797 01C2  
                        l789 01BE                          l991 002C                          l799 01C3  
                        l993 0031                          l995 0033                          l987 0025  
                        l997 0037                          l989 0028                          l999 003C  
                        u510 002C                          u511 002B                          u600 0084  
                        u520 0037                          u601 0083                          u521 0036  
                        u530 0048                          u610 00F4                          u531 0047  
                        u611 00F3                          u620 00FF                          u621 00FE  
                        u550 005A                          u630 010A                          u551 0059  
                        u631 0109                          u545 004C                          u570 006B  
                        u650 011C                          u571 006A                          u651 011B  
                        u660 0126                          u565 005B                          u661 0125  
                        u645 010E                          u590 007F                          u591 007E  
                        u575 0067                          u680 0139                          u585 0073  
                        u681 0138                          u665 0122                          u690 013E  
                        u691 013D                          u675 012D                          _isr 0148  
                        fsr0 0004                          indf 0000                 ___awmod@sign 002C  
                       l1001 0040                         l1011 0056                         l1003 0042  
                       l1021 0079                         l1013 005A                         l1005 0048  
                       l1015 006B                         l1007 004B                         l1023 007F  
                       l1031 00ED                         l1025 0084                         l1017 0071  
                       l1009 0052                         l1041 00FF                         l1033 00F0  
                       l1027 0089                         l1019 0072                         l1051 0118  
                       l1043 0104                         l1035 00F4                         l1053 011C  
                       l1045 010A                         l1061 0139                         l1037 00F9  
                       l1063 013E                         l1055 0126                         l1047 010D  
                       l1039 00FB                         l1071 0094                         l1065 0143  
                       l1057 012C                         l1049 0114                         l1073 00AA  
                       l1059 0133                         l1075 00C0                         l1077 00D6  
                       l1069 008E                         l1079 01D8                         ?_isr 0070  
                       _T0IF 005A                         _RBIF 0058                         i1l65 0193  
                       _TMR0 0001                         _WPUB 0095                         _main 01D8  
                       btemp 007E                         start 000E                        ??_isr 0070  
                      ?_main 0070              __end_of___awdiv 008E              __end_of___awmod 0148  
                      _ANSEL 0188              ___awdiv@divisor 0073                        i1l951 0156  
                      i1l961 016B                        i1l953 015A                        i1l945 0148  
                      i1l971 017C                        i1l963 0172                        i1l955 0160  
                      i1l947 014C                        i1l981 018F                        i1l965 0174  
                      i1l957 0162                        i1l949 0150                        i1l973 017E  
                      i1l983 0192                        i1l975 0182                        i1l967 0179  
                      i1l959 0167                        i1l977 0188                        i1l969 017B  
                      i1l979 018B              ___awdiv@counter 002B                        u50_20 018F  
                      u50_21 018E                        _PORTA 0005                        _PORTB 0006  
                      _PORTC 0007                        _PORTD 0008                        u45_20 014C  
                      u45_21 014B                        u46_20 0160                        u46_21 015F  
                      u47_20 0172                        u47_21 0171                        u48_20 0182  
                      u48_21 0181                        u49_20 0188                        u49_21 0187  
                      _TRISC 0087                        _TRISD 0088                        _Table 0020  
                      _setup 019C                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 0011                 __end_of_main 01E6  
                     ??_main 0077             ___awdiv@dividend 0075                       ?_setup 0070  
                     _ANSELH 0189                    ??___awdiv 002A                    ??___awmod 002A  
           ___awdiv@quotient 002D              ___awmod@divisor 0073              ___awmod@counter 002B  
         _nibbles_separation 008E                       saved_w 007E          ?_nibbles_separation 0070  
    __end_of__initialization 0021               __pcstackCOMMON 0070         ??_nibbles_separation 002F  
               __pidataBANK0 01E6                __end_of_setup 01C5               _OPTION_REGbits 0081  
                    ??_setup 0073                   __pnvCOMMON 0077                   __pmaintext 01D8  
                 __pintentry 0004                      _Decenas 0033                      _Counter 0077  
                    ___awdiv 0025                      ___awmod 00ED                      _Storage 0078  
                    __ptext1 019C                      __ptext2 008E                      __ptext3 00ED  
                    __ptext4 0025                      __ptext5 0148                 __size_of_isr 0054  
           ___awmod@dividend 0075         end_of_initialization 0021                    _PORTBbits 0006  
                  _TRISBbits 0086          start_initialization 0011                  __end_of_isr 019C  
__size_of_nibbles_separation 005F                   init_fetch0 01C5                  __pdataBANK0 0020  
               _var4Displays 0079                  __pbssCOMMON 0079                    ___latbits 0002  
              __pcstackBANK0 002A                    __pnvBANK0 0032                     ?___awdiv 0073  
                   ?___awmod 0073               __size_of_setup 0029            interrupt_function 0004  
                   _IOCBbits 0096                     _Centenas 0034                     _Unidades 0032  
           __size_of___awdiv 0069             __size_of___awmod 005B                __size_of_main 000E  
                 _INTCONbits 000B                     init_ram0 01C9                     intlevel1 0000  
 __end_of_nibbles_separation 00ED                   _OSCCONbits 008F  
