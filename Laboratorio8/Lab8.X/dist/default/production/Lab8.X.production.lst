

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 13:09:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0217                     __pidataBANK0:
   215                           
   216                           ;initializer for _Table
   217  0217  343F               	retlw	63
   218  0218  3406               	retlw	6
   219  0219  345B               	retlw	91
   220  021A  344F               	retlw	79
   221  021B  3466               	retlw	102
   222  021C  346D               	retlw	109
   223  021D  347D               	retlw	125
   224  021E  3407               	retlw	7
   225  021F  347F               	retlw	127
   226  0220  346F               	retlw	111
   227  0006                     _PORTB	set	6
   228  0005                     _PORTA	set	5
   229  001E                     _ADRESH	set	30
   230  0007                     _PORTC	set	7
   231  001F                     _ADCON0bits	set	31
   232  000C                     _PIR1bits	set	12
   233  0001                     _TMR0	set	1
   234  000B                     _INTCONbits	set	11
   235  0008                     _PORTD	set	8
   236  0006                     _PORTBbits	set	6
   237  005A                     _T0IF	set	90
   238  009F                     _ADCON1bits	set	159
   239  008C                     _PIE1bits	set	140
   240  0081                     _OPTION_REGbits	set	129
   241  008F                     _OSCCONbits	set	143
   242  0088                     _TRISD	set	136
   243  0087                     _TRISC	set	135
   244  0086                     _TRISBbits	set	134
   245  0085                     _TRISAbits	set	133
   246  0189                     _ANSELH	set	393
   247  0188                     _ANSEL	set	392
   248                           
   249                           	psect	cinit
   250  0011                     start_initialization:	
   251                           ; #config settings
   252                           
   253  0011                     __initialization:
   254                           
   255                           ; Initialize objects allocated to BANK0
   256  0011  1383               	bcf	3,7	;select IRP bank0
   257  0012  3035               	movlw	low (__pdataBANK0+10)
   258  0013  00FD               	movwf	btemp+-1
   259  0014  3002               	movlw	high __pidataBANK0
   260  0015  00FE               	movwf	btemp
   261  0016  3017               	movlw	low __pidataBANK0
   262  0017  00FF               	movwf	btemp+1
   263  0018  302B               	movlw	low __pdataBANK0
   264  0019  0084               	movwf	4
   265  001A  120A  118A  2208  120A  118A  	fcall	init_ram0
   266                           
   267                           ; Clear objects allocated to BANK0
   268  001F  01B5               	clrf	__pbssBANK0& (0+127)
   269  0020  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   270  0021  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   271                           
   272                           ; Clear objects allocated to COMMON
   273  0022  01F6               	clrf	__pbssCOMMON& (0+127)
   274  0023  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   275  0024  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   276  0025  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   277  0026                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  0026                     __end_of__initialization:
   281  0026  0183               	clrf	3
   282  0027  120A  118A  29D6   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  0076                     __pbssCOMMON:
   286  0076                     _Counter:
   287  0076                     	ds	1
   288  0077                     _Storage:
   289  0077                     	ds	1
   290  0078                     _Decenas:
   291  0078                     	ds	1
   292  0079                     _Centenas:
   293  0079                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296  0035                     __pbssBANK0:
   297  0035                     _var4Displays:
   298  0035                     	ds	2
   299  0037                     _Unidades:
   300  0037                     	ds	1
   301                           
   302                           	psect	dataBANK0
   303  002B                     __pdataBANK0:
   304  002B                     _Table:
   305  002B                     	ds	10
   306                           
   307                           	psect	inittext
   308  0204                     init_fetch0:	
   309                           ;	Called with low address in FSR and high address in W
   310                           
   311  0204  087E               	movf	btemp,w
   312  0205  008A               	movwf	10
   313  0206  087F               	movf	btemp+1,w
   314  0207  0082               	movwf	2
   315  0208                     init_ram0:	
   316                           ;Called with:
   317                           ;	high address of idata address in btemp 
   318                           ;	low address of idata address in btemp+1 
   319                           ;	low address of data in FSR
   320                           ;	high address + 1 of data in btemp-1
   321                           
   322  0208  120A  118A  2204  120A  118A  	fcall	init_fetch0
   323  020D  0080               	movwf	0
   324  020E  0A84               	incf	4,f
   325  020F  0804               	movf	4,w
   326  0210  067D               	xorwf	btemp+-1,w
   327  0211  1903               	btfsc	3,2
   328  0212  3400               	retlw	0
   329  0213  0AFF               	incf	btemp+1,f
   330  0214  1903               	btfsc	3,2
   331  0215  0AFE               	incf	btemp,f
   332  0216  2A08               	goto	init_ram0
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:
   336  0070                     ?_setup:
   337  0070                     ?_nibbles_separation:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_isr:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351  0070                     	ds	4
   352  0074                     ??_setup:
   353  0074                     ??___awdiv:	
   354                           ; 1 bytes @ 0x4
   355                           
   356  0074                     ??___awmod:	
   357                           ; 1 bytes @ 0x4
   358                           
   359                           
   360                           ; 1 bytes @ 0x4
   361  0074                     	ds	1
   362  0075                     ??_main:
   363                           
   364                           ; 1 bytes @ 0x5
   365  0075                     	ds	1
   366                           
   367                           	psect	cstackBANK0
   368  0020                     __pcstackBANK0:
   369  0020                     ?___awdiv:
   370  0020                     ?___awmod:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0020                     ___awdiv@divisor:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0020                     ___awmod@divisor:	
   377                           ; 2 bytes @ 0x0
   378                           
   379                           
   380                           ; 2 bytes @ 0x0
   381  0020                     	ds	2
   382  0022                     ___awdiv@dividend:
   383  0022                     ___awmod@dividend:	
   384                           ; 2 bytes @ 0x2
   385                           
   386                           
   387                           ; 2 bytes @ 0x2
   388  0022                     	ds	2
   389  0024                     ___awdiv@counter:
   390  0024                     ___awmod@counter:	
   391                           ; 1 bytes @ 0x4
   392                           
   393                           
   394                           ; 1 bytes @ 0x4
   395  0024                     	ds	1
   396  0025                     ___awdiv@sign:
   397  0025                     ___awmod@sign:	
   398                           ; 1 bytes @ 0x5
   399                           
   400                           
   401                           ; 1 bytes @ 0x5
   402  0025                     	ds	1
   403  0026                     ___awdiv@quotient:
   404                           
   405                           ; 2 bytes @ 0x6
   406  0026                     	ds	2
   407  0028                     ??_nibbles_separation:
   408                           
   409                           ; 1 bytes @ 0x8
   410  0028                     	ds	3
   411                           
   412                           	psect	maintext
   413  01D6                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 100 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          1       0       0       0       0
   436 ;;      Totals:         1       0       0       0       0
   437 ;;Total ram usage:        1 bytes
   438 ;; Hardware stack levels required when called:    3
   439 ;; This function calls:
   440 ;;		_nibbles_separation
   441 ;;		_setup
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _main
   449  01D6                     _main:
   450  01D6                     l1114:	
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   453                           
   454                           
   455                           ;main.c: 101:     setup();
   456  01D6  120A  118A  219F  120A  118A  	fcall	_setup
   457  01DB                     l1116:
   458                           
   459                           ;main.c: 102:     ADCON0bits.GO = 1;
   460  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   461  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   462  01DD  149F               	bsf	31,1	;volatile
   463  01DE                     l1118:
   464                           
   465                           ;main.c: 108:     if (ADCON0bits.GO == 0) {
   466  01DE  1283               	bcf	3,5	;RP0=0, select bank0
   467  01DF  1303               	bcf	3,6	;RP1=0, select bank0
   468  01E0  189F               	btfsc	31,1	;volatile
   469  01E1  29E3               	goto	u721
   470  01E2  29E4               	goto	u720
   471  01E3                     u721:
   472  01E3  29FB               	goto	l1130
   473  01E4                     u720:
   474  01E4                     l1120:
   475                           
   476                           ;main.c: 109:         if (ADCON0bits.CHS == 1)
   477  01E4  0C1F               	rrf	31,w	;volatile
   478  01E5  00F5               	movwf	??_main
   479  01E6  0C75               	rrf	??_main,w
   480  01E7  390F               	andlw	15
   481  01E8  3A01               	xorlw	1
   482  01E9  1D03               	skipz
   483  01EA  29EC               	goto	u731
   484  01EB  29ED               	goto	u730
   485  01EC                     u731:
   486  01EC  29F0               	goto	l1124
   487  01ED                     u730:
   488  01ED                     l1122:
   489                           
   490                           ;main.c: 110:             ADCON0bits.CHS = 0;
   491  01ED  30C3               	movlw	-61
   492  01EE  059F               	andwf	31,f	;volatile
   493  01EF  29F4               	goto	l1126
   494  01F0                     l1124:
   495                           
   496                           ;main.c: 112:             ADCON0bits.CHS = 1;
   497  01F0  081F               	movf	31,w	;volatile
   498  01F1  39C3               	andlw	-61
   499  01F2  3804               	iorlw	4
   500  01F3  009F               	movwf	31	;volatile
   501  01F4                     l1126:
   502                           
   503                           ;main.c: 114:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   504  01F4  3021               	movlw	33
   505  01F5  00F5               	movwf	??_main
   506  01F6                     u747:
   507  01F6  0BF5               	decfsz	??_main,f
   508  01F7  29F6               	goto	u747
   509  01F8                     l1128:
   510                           
   511                           ;main.c: 115:         ADCON0bits.GO = 1;
   512  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   513  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   514  01FA  149F               	bsf	31,1	;volatile
   515  01FB                     l1130:
   516                           
   517                           ;main.c: 117:         nibbles_separation();
   518  01FB  120A  118A  2093  120A  118A  	fcall	_nibbles_separation
   519  0200  29DE               	goto	l1118
   520  0201  120A  118A  280E   	ljmp	start
   521  0204                     __end_of_main:
   522                           
   523                           	psect	text1
   524  019F                     __ptext1:	
   525 ;; *************** function _setup *****************
   526 ;; Defined at:
   527 ;;		line 123 in file "main.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _setup
   557  019F                     _setup:
   558  019F                     l764:	
   559                           ;incstack = 0
   560                           ; Regs used in _setup: [wreg+status,2+status,0]
   561                           
   562                           
   563                           ;main.c: 125:     ANSEL = 0b00000011;
   564  019F  3003               	movlw	3
   565  01A0  1683               	bsf	3,5	;RP0=1, select bank3
   566  01A1  1703               	bsf	3,6	;RP1=1, select bank3
   567  01A2  0088               	movwf	8	;volatile
   568                           
   569                           ;main.c: 126:     ANSELH = 0b11111111;
   570  01A3  30FF               	movlw	255
   571  01A4  0089               	movwf	9	;volatile
   572  01A5                     l766:
   573                           
   574                           ;main.c: 128:     TRISAbits.TRISA0 = 1;
   575  01A5  1683               	bsf	3,5	;RP0=1, select bank1
   576  01A6  1303               	bcf	3,6	;RP1=0, select bank1
   577  01A7  1405               	bsf	5,0	;volatile
   578  01A8                     l768:
   579                           
   580                           ;main.c: 129:     TRISAbits.TRISA1 = 1;
   581  01A8  1485               	bsf	5,1	;volatile
   582  01A9                     l770:
   583                           
   584                           ;main.c: 130:     TRISBbits.TRISB0 = 0;
   585  01A9  1006               	bcf	6,0	;volatile
   586  01AA                     l772:
   587                           
   588                           ;main.c: 131:     TRISBbits.TRISB1 = 0;
   589  01AA  1086               	bcf	6,1	;volatile
   590  01AB                     l774:
   591                           
   592                           ;main.c: 132:     TRISBbits.TRISB2 = 0;
   593  01AB  1106               	bcf	6,2	;volatile
   594  01AC                     l776:
   595                           
   596                           ;main.c: 133:     TRISC = 0x00;
   597  01AC  0187               	clrf	7	;volatile
   598  01AD                     l778:
   599                           
   600                           ;main.c: 134:     TRISD = 0x00;
   601  01AD  0188               	clrf	8	;volatile
   602  01AE                     l780:
   603                           
   604                           ;main.c: 138:     PORTA = 0x00;
   605  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   606  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   607  01B0  0185               	clrf	5	;volatile
   608  01B1                     l782:
   609                           
   610                           ;main.c: 139:     PORTB = 0x00;
   611  01B1  0186               	clrf	6	;volatile
   612  01B2                     l784:
   613                           
   614                           ;main.c: 140:     PORTC = 0x00;
   615  01B2  0187               	clrf	7	;volatile
   616  01B3                     l786:
   617                           
   618                           ;main.c: 141:     PORTD = 0x00;
   619  01B3  0188               	clrf	8	;volatile
   620  01B4                     l788:
   621                           
   622                           ;main.c: 145:     OSCCONbits.IRCF2 = 0;
   623  01B4  1683               	bsf	3,5	;RP0=1, select bank1
   624  01B5  1303               	bcf	3,6	;RP1=0, select bank1
   625  01B6  130F               	bcf	15,6	;volatile
   626  01B7                     l790:
   627                           
   628                           ;main.c: 146:     OSCCONbits.IRCF1 = 1;
   629  01B7  168F               	bsf	15,5	;volatile
   630  01B8                     l792:
   631                           
   632                           ;main.c: 147:     OSCCONbits.IRCF0 = 0;
   633  01B8  120F               	bcf	15,4	;volatile
   634  01B9                     l794:
   635                           
   636                           ;main.c: 148:     OSCCONbits.SCS = 1;
   637  01B9  140F               	bsf	15,0	;volatile
   638  01BA                     l796:
   639                           
   640                           ;main.c: 152:     OPTION_REGbits.T0CS = 0;
   641  01BA  1281               	bcf	1,5	;volatile
   642  01BB                     l798:
   643                           
   644                           ;main.c: 153:     OPTION_REGbits.PSA = 0;
   645  01BB  1181               	bcf	1,3	;volatile
   646  01BC                     l800:
   647                           
   648                           ;main.c: 154:     OPTION_REGbits.PS2 = 1;
   649  01BC  1501               	bsf	1,2	;volatile
   650  01BD                     l802:
   651                           
   652                           ;main.c: 155:     OPTION_REGbits.PS1 = 1;
   653  01BD  1481               	bsf	1,1	;volatile
   654  01BE                     l804:
   655                           
   656                           ;main.c: 156:     OPTION_REGbits.PS0 = 1;
   657  01BE  1401               	bsf	1,0	;volatile
   658  01BF                     l806:
   659                           
   660                           ;main.c: 160:     INTCONbits.GIE = 1;
   661  01BF  178B               	bsf	11,7	;volatile
   662  01C0                     l808:
   663                           
   664                           ;main.c: 161:     INTCONbits.T0IF = 0;
   665  01C0  110B               	bcf	11,2	;volatile
   666  01C1                     l810:
   667                           
   668                           ;main.c: 162:     INTCONbits.T0IE = 1;
   669  01C1  168B               	bsf	11,5	;volatile
   670  01C2                     l812:
   671                           
   672                           ;main.c: 163:     INTCONbits.PEIE = 1;
   673  01C2  170B               	bsf	11,6	;volatile
   674  01C3                     l814:
   675                           
   676                           ;main.c: 164:     PIR1bits.ADIF = 0;
   677  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   678  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   679  01C5  130C               	bcf	12,6	;volatile
   680  01C6                     l816:
   681                           
   682                           ;main.c: 165:     PIE1bits.ADIE = 1;
   683  01C6  1683               	bsf	3,5	;RP0=1, select bank1
   684  01C7  1303               	bcf	3,6	;RP1=0, select bank1
   685  01C8  170C               	bsf	12,6	;volatile
   686  01C9                     l818:
   687                           
   688                           ;main.c: 169:     ADCON0bits.ADON = 1;
   689  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   690  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   691  01CB  141F               	bsf	31,0	;volatile
   692  01CC                     l820:
   693                           
   694                           ;main.c: 170:     ADCON0bits.ADCS1 = 1;
   695  01CC  179F               	bsf	31,7	;volatile
   696  01CD                     l822:
   697                           
   698                           ;main.c: 171:     ADCON0bits.ADCS0 = 1;
   699  01CD  171F               	bsf	31,6	;volatile
   700  01CE                     l824:
   701                           
   702                           ;main.c: 172:     ADCON0bits.CHS = 0;
   703  01CE  30C3               	movlw	-61
   704  01CF  059F               	andwf	31,f	;volatile
   705  01D0                     l826:
   706                           
   707                           ;main.c: 173:     ADCON1bits.ADFM = 0;
   708  01D0  1683               	bsf	3,5	;RP0=1, select bank1
   709  01D1  1303               	bcf	3,6	;RP1=0, select bank1
   710  01D2  139F               	bcf	31,7	;volatile
   711  01D3                     l828:
   712                           
   713                           ;main.c: 174:     ADCON1bits.VCFG0 = 0;
   714  01D3  121F               	bcf	31,4	;volatile
   715  01D4                     l830:
   716                           
   717                           ;main.c: 175:     ADCON1bits.VCFG1 = 0;
   718  01D4  129F               	bcf	31,5	;volatile
   719  01D5                     l87:
   720  01D5  0008               	return
   721  01D6                     __end_of_setup:
   722                           
   723                           	psect	text2
   724  0093                     __ptext2:	
   725 ;; *************** function _nibbles_separation *****************
   726 ;; Defined at:
   727 ;;		line 180 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      unsigned char 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, pclath, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0
   743 ;;      Temps:          0       3       0       0       0
   744 ;;      Totals:         0       3       0       0       0
   745 ;;Total ram usage:        3 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    2
   748 ;; This function calls:
   749 ;;		___awdiv
   750 ;;		___awmod
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _nibbles_separation
   758  0093                     _nibbles_separation:
   759  0093                     l1112:	
   760                           ;incstack = 0
   761                           ; Regs used in _nibbles_separation: [wreg+status,2+status,0+pclath+cstack]
   762                           
   763                           
   764                           ;main.c: 182:     Centenas = Counter/100;
   765  0093  3064               	movlw	100
   766  0094  1283               	bcf	3,5	;RP0=0, select bank0
   767  0095  1303               	bcf	3,6	;RP1=0, select bank0
   768  0096  00A0               	movwf	___awdiv@divisor
   769  0097  3000               	movlw	0
   770  0098  00A1               	movwf	___awdiv@divisor+1
   771  0099  0876               	movf	_Counter,w
   772  009A  00A8               	movwf	??_nibbles_separation
   773  009B  01A9               	clrf	??_nibbles_separation+1
   774  009C  0828               	movf	??_nibbles_separation,w
   775  009D  00A2               	movwf	___awdiv@dividend
   776  009E  0829               	movf	??_nibbles_separation+1,w
   777  009F  00A3               	movwf	___awdiv@dividend+1
   778  00A0  120A  118A  202A  120A  118A  	fcall	___awdiv
   779  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   780  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   781  00A7  0820               	movf	?___awdiv,w
   782  00A8  00AA               	movwf	??_nibbles_separation+2
   783  00A9  082A               	movf	??_nibbles_separation+2,w
   784  00AA  00F9               	movwf	_Centenas
   785                           
   786                           ;main.c: 183:     Storage = Counter%100;
   787  00AB  3064               	movlw	100
   788  00AC  00A0               	movwf	___awmod@divisor
   789  00AD  3000               	movlw	0
   790  00AE  00A1               	movwf	___awmod@divisor+1
   791  00AF  0876               	movf	_Counter,w
   792  00B0  00A8               	movwf	??_nibbles_separation
   793  00B1  01A9               	clrf	??_nibbles_separation+1
   794  00B2  0828               	movf	??_nibbles_separation,w
   795  00B3  00A2               	movwf	___awmod@dividend
   796  00B4  0829               	movf	??_nibbles_separation+1,w
   797  00B5  00A3               	movwf	___awmod@dividend+1
   798  00B6  120A  118A  20EE  120A  118A  	fcall	___awmod
   799  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   800  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   801  00BD  0820               	movf	?___awmod,w
   802  00BE  00AA               	movwf	??_nibbles_separation+2
   803  00BF  082A               	movf	??_nibbles_separation+2,w
   804  00C0  00F7               	movwf	_Storage
   805                           
   806                           ;main.c: 184:     Decenas = Storage/10;
   807  00C1  300A               	movlw	10
   808  00C2  00A0               	movwf	___awdiv@divisor
   809  00C3  3000               	movlw	0
   810  00C4  00A1               	movwf	___awdiv@divisor+1
   811  00C5  0877               	movf	_Storage,w
   812  00C6  00A8               	movwf	??_nibbles_separation
   813  00C7  01A9               	clrf	??_nibbles_separation+1
   814  00C8  0828               	movf	??_nibbles_separation,w
   815  00C9  00A2               	movwf	___awdiv@dividend
   816  00CA  0829               	movf	??_nibbles_separation+1,w
   817  00CB  00A3               	movwf	___awdiv@dividend+1
   818  00CC  120A  118A  202A  120A  118A  	fcall	___awdiv
   819  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   820  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   821  00D3  0820               	movf	?___awdiv,w
   822  00D4  00AA               	movwf	??_nibbles_separation+2
   823  00D5  082A               	movf	??_nibbles_separation+2,w
   824  00D6  00F8               	movwf	_Decenas
   825                           
   826                           ;main.c: 185:     Unidades = Storage%10;
   827  00D7  300A               	movlw	10
   828  00D8  00A0               	movwf	___awmod@divisor
   829  00D9  3000               	movlw	0
   830  00DA  00A1               	movwf	___awmod@divisor+1
   831  00DB  0877               	movf	_Storage,w
   832  00DC  00A8               	movwf	??_nibbles_separation
   833  00DD  01A9               	clrf	??_nibbles_separation+1
   834  00DE  0828               	movf	??_nibbles_separation,w
   835  00DF  00A2               	movwf	___awmod@dividend
   836  00E0  0829               	movf	??_nibbles_separation+1,w
   837  00E1  00A3               	movwf	___awmod@dividend+1
   838  00E2  120A  118A  20EE  120A  118A  	fcall	___awmod
   839  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   840  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   841  00E9  0820               	movf	?___awmod,w
   842  00EA  00AA               	movwf	??_nibbles_separation+2
   843  00EB  082A               	movf	??_nibbles_separation+2,w
   844  00EC  00B7               	movwf	_Unidades
   845  00ED                     l90:
   846  00ED  0008               	return
   847  00EE                     __end_of_nibbles_separation:
   848                           
   849                           	psect	text3
   850  00EE                     __ptext3:	
   851 ;; *************** function ___awmod *****************
   852 ;; Defined at:
   853 ;;		line 5 in file "D:\PrograMicros\pic\sources\c90\common\awmod.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  divisor         2    0[BANK0 ] int 
   856 ;;  dividend        2    2[BANK0 ] int 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  sign            1    5[BANK0 ] unsigned char 
   859 ;;  counter         1    4[BANK0 ] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2    0[BANK0 ] int 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       4       0       0       0
   870 ;;      Locals:         0       2       0       0       0
   871 ;;      Temps:          1       0       0       0       0
   872 ;;      Totals:         1       6       0       0       0
   873 ;;Total ram usage:        7 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_nibbles_separation
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function ___awmod
   885  00EE                     ___awmod:
   886  00EE                     l1074:	
   887                           ;incstack = 0
   888                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   889                           
   890  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   891  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   892  00F0  01A5               	clrf	___awmod@sign
   893  00F1                     l1076:
   894  00F1  1FA3               	btfss	___awmod@dividend+1,7
   895  00F2  28F4               	goto	u631
   896  00F3  28F5               	goto	u630
   897  00F4                     u631:
   898  00F4  28FC               	goto	l1082
   899  00F5                     u630:
   900  00F5                     l1078:
   901  00F5  09A2               	comf	___awmod@dividend,f
   902  00F6  09A3               	comf	___awmod@dividend+1,f
   903  00F7  0AA2               	incf	___awmod@dividend,f
   904  00F8  1903               	skipnz
   905  00F9  0AA3               	incf	___awmod@dividend+1,f
   906  00FA                     l1080:
   907  00FA  01A5               	clrf	___awmod@sign
   908  00FB  0AA5               	incf	___awmod@sign,f
   909  00FC                     l1082:
   910  00FC  1FA1               	btfss	___awmod@divisor+1,7
   911  00FD  28FF               	goto	u641
   912  00FE  2900               	goto	u640
   913  00FF                     u641:
   914  00FF  2905               	goto	l1086
   915  0100                     u640:
   916  0100                     l1084:
   917  0100  09A0               	comf	___awmod@divisor,f
   918  0101  09A1               	comf	___awmod@divisor+1,f
   919  0102  0AA0               	incf	___awmod@divisor,f
   920  0103  1903               	skipnz
   921  0104  0AA1               	incf	___awmod@divisor+1,f
   922  0105                     l1086:
   923  0105  0820               	movf	___awmod@divisor,w
   924  0106  0421               	iorwf	___awmod@divisor+1,w
   925  0107  1903               	btfsc	3,2
   926  0108  290A               	goto	u651
   927  0109  290B               	goto	u650
   928  010A                     u651:
   929  010A  293A               	goto	l1104
   930  010B                     u650:
   931  010B                     l1088:
   932  010B  01A4               	clrf	___awmod@counter
   933  010C  0AA4               	incf	___awmod@counter,f
   934  010D  2919               	goto	l1094
   935  010E                     l1090:
   936  010E  3001               	movlw	1
   937  010F                     u665:
   938  010F  1003               	clrc
   939  0110  0DA0               	rlf	___awmod@divisor,f
   940  0111  0DA1               	rlf	___awmod@divisor+1,f
   941  0112  3EFF               	addlw	-1
   942  0113  1D03               	skipz
   943  0114  290F               	goto	u665
   944  0115                     l1092:
   945  0115  3001               	movlw	1
   946  0116  00F4               	movwf	??___awmod
   947  0117  0874               	movf	??___awmod,w
   948  0118  07A4               	addwf	___awmod@counter,f
   949  0119                     l1094:
   950  0119  1FA1               	btfss	___awmod@divisor+1,7
   951  011A  291C               	goto	u671
   952  011B  291D               	goto	u670
   953  011C                     u671:
   954  011C  290E               	goto	l1090
   955  011D                     u670:
   956  011D                     l1096:
   957  011D  0821               	movf	___awmod@divisor+1,w
   958  011E  0223               	subwf	___awmod@dividend+1,w
   959  011F  1D03               	skipz
   960  0120  2923               	goto	u685
   961  0121  0820               	movf	___awmod@divisor,w
   962  0122  0222               	subwf	___awmod@dividend,w
   963  0123                     u685:
   964  0123  1C03               	skipc
   965  0124  2926               	goto	u681
   966  0125  2927               	goto	u680
   967  0126                     u681:
   968  0126  292D               	goto	l1100
   969  0127                     u680:
   970  0127                     l1098:
   971  0127  0820               	movf	___awmod@divisor,w
   972  0128  02A2               	subwf	___awmod@dividend,f
   973  0129  0821               	movf	___awmod@divisor+1,w
   974  012A  1C03               	skipc
   975  012B  03A3               	decf	___awmod@dividend+1,f
   976  012C  02A3               	subwf	___awmod@dividend+1,f
   977  012D                     l1100:
   978  012D  3001               	movlw	1
   979  012E                     u695:
   980  012E  1003               	clrc
   981  012F  0CA1               	rrf	___awmod@divisor+1,f
   982  0130  0CA0               	rrf	___awmod@divisor,f
   983  0131  3EFF               	addlw	-1
   984  0132  1D03               	skipz
   985  0133  292E               	goto	u695
   986  0134                     l1102:
   987  0134  3001               	movlw	1
   988  0135  02A4               	subwf	___awmod@counter,f
   989  0136  1D03               	btfss	3,2
   990  0137  2939               	goto	u701
   991  0138  293A               	goto	u700
   992  0139                     u701:
   993  0139  291D               	goto	l1096
   994  013A                     u700:
   995  013A                     l1104:
   996  013A  0825               	movf	___awmod@sign,w
   997  013B  1903               	btfsc	3,2
   998  013C  293E               	goto	u711
   999  013D  293F               	goto	u710
  1000  013E                     u711:
  1001  013E  2944               	goto	l1108
  1002  013F                     u710:
  1003  013F                     l1106:
  1004  013F  09A2               	comf	___awmod@dividend,f
  1005  0140  09A3               	comf	___awmod@dividend+1,f
  1006  0141  0AA2               	incf	___awmod@dividend,f
  1007  0142  1903               	skipnz
  1008  0143  0AA3               	incf	___awmod@dividend+1,f
  1009  0144                     l1108:
  1010  0144  0823               	movf	___awmod@dividend+1,w
  1011  0145  00A1               	movwf	?___awmod+1
  1012  0146  0822               	movf	___awmod@dividend,w
  1013  0147  00A0               	movwf	?___awmod
  1014  0148                     l342:
  1015  0148  0008               	return
  1016  0149                     __end_of___awmod:
  1017                           
  1018                           	psect	text4
  1019  002A                     __ptext4:	
  1020 ;; *************** function ___awdiv *****************
  1021 ;; Defined at:
  1022 ;;		line 5 in file "D:\PrograMicros\pic\sources\c90\common\awdiv.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  divisor         2    0[BANK0 ] int 
  1025 ;;  dividend        2    2[BANK0 ] int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  quotient        2    6[BANK0 ] int 
  1028 ;;  sign            1    5[BANK0 ] unsigned char 
  1029 ;;  counter         1    4[BANK0 ] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2    0[BANK0 ] int 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       4       0       0       0
  1040 ;;      Locals:         0       4       0       0       0
  1041 ;;      Temps:          1       0       0       0       0
  1042 ;;      Totals:         1       8       0       0       0
  1043 ;;Total ram usage:        9 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_nibbles_separation
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function ___awdiv
  1055  002A                     ___awdiv:
  1056  002A                     l1030:	
  1057                           ;incstack = 0
  1058                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1059                           
  1060  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1061  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1062  002C  01A5               	clrf	___awdiv@sign
  1063  002D                     l1032:
  1064  002D  1FA1               	btfss	___awdiv@divisor+1,7
  1065  002E  2830               	goto	u531
  1066  002F  2831               	goto	u530
  1067  0030                     u531:
  1068  0030  2838               	goto	l1038
  1069  0031                     u530:
  1070  0031                     l1034:
  1071  0031  09A0               	comf	___awdiv@divisor,f
  1072  0032  09A1               	comf	___awdiv@divisor+1,f
  1073  0033  0AA0               	incf	___awdiv@divisor,f
  1074  0034  1903               	skipnz
  1075  0035  0AA1               	incf	___awdiv@divisor+1,f
  1076  0036                     l1036:
  1077  0036  01A5               	clrf	___awdiv@sign
  1078  0037  0AA5               	incf	___awdiv@sign,f
  1079  0038                     l1038:
  1080  0038  1FA3               	btfss	___awdiv@dividend+1,7
  1081  0039  283B               	goto	u541
  1082  003A  283C               	goto	u540
  1083  003B                     u541:
  1084  003B  2845               	goto	l1044
  1085  003C                     u540:
  1086  003C                     l1040:
  1087  003C  09A2               	comf	___awdiv@dividend,f
  1088  003D  09A3               	comf	___awdiv@dividend+1,f
  1089  003E  0AA2               	incf	___awdiv@dividend,f
  1090  003F  1903               	skipnz
  1091  0040  0AA3               	incf	___awdiv@dividend+1,f
  1092  0041                     l1042:
  1093  0041  3001               	movlw	1
  1094  0042  00F4               	movwf	??___awdiv
  1095  0043  0874               	movf	??___awdiv,w
  1096  0044  06A5               	xorwf	___awdiv@sign,f
  1097  0045                     l1044:
  1098  0045  01A6               	clrf	___awdiv@quotient
  1099  0046  01A7               	clrf	___awdiv@quotient+1
  1100  0047                     l1046:
  1101  0047  0820               	movf	___awdiv@divisor,w
  1102  0048  0421               	iorwf	___awdiv@divisor+1,w
  1103  0049  1903               	btfsc	3,2
  1104  004A  284C               	goto	u551
  1105  004B  284D               	goto	u550
  1106  004C                     u551:
  1107  004C  2884               	goto	l1066
  1108  004D                     u550:
  1109  004D                     l1048:
  1110  004D  01A4               	clrf	___awdiv@counter
  1111  004E  0AA4               	incf	___awdiv@counter,f
  1112  004F  285B               	goto	l1054
  1113  0050                     l1050:
  1114  0050  3001               	movlw	1
  1115  0051                     u565:
  1116  0051  1003               	clrc
  1117  0052  0DA0               	rlf	___awdiv@divisor,f
  1118  0053  0DA1               	rlf	___awdiv@divisor+1,f
  1119  0054  3EFF               	addlw	-1
  1120  0055  1D03               	skipz
  1121  0056  2851               	goto	u565
  1122  0057                     l1052:
  1123  0057  3001               	movlw	1
  1124  0058  00F4               	movwf	??___awdiv
  1125  0059  0874               	movf	??___awdiv,w
  1126  005A  07A4               	addwf	___awdiv@counter,f
  1127  005B                     l1054:
  1128  005B  1FA1               	btfss	___awdiv@divisor+1,7
  1129  005C  285E               	goto	u571
  1130  005D  285F               	goto	u570
  1131  005E                     u571:
  1132  005E  2850               	goto	l1050
  1133  005F                     u570:
  1134  005F                     l1056:
  1135  005F  3001               	movlw	1
  1136  0060                     u585:
  1137  0060  1003               	clrc
  1138  0061  0DA6               	rlf	___awdiv@quotient,f
  1139  0062  0DA7               	rlf	___awdiv@quotient+1,f
  1140  0063  3EFF               	addlw	-1
  1141  0064  1D03               	skipz
  1142  0065  2860               	goto	u585
  1143  0066  0821               	movf	___awdiv@divisor+1,w
  1144  0067  0223               	subwf	___awdiv@dividend+1,w
  1145  0068  1D03               	skipz
  1146  0069  286C               	goto	u595
  1147  006A  0820               	movf	___awdiv@divisor,w
  1148  006B  0222               	subwf	___awdiv@dividend,w
  1149  006C                     u595:
  1150  006C  1C03               	skipc
  1151  006D  286F               	goto	u591
  1152  006E  2870               	goto	u590
  1153  006F                     u591:
  1154  006F  2877               	goto	l1062
  1155  0070                     u590:
  1156  0070                     l1058:
  1157  0070  0820               	movf	___awdiv@divisor,w
  1158  0071  02A2               	subwf	___awdiv@dividend,f
  1159  0072  0821               	movf	___awdiv@divisor+1,w
  1160  0073  1C03               	skipc
  1161  0074  03A3               	decf	___awdiv@dividend+1,f
  1162  0075  02A3               	subwf	___awdiv@dividend+1,f
  1163  0076                     l1060:
  1164  0076  1426               	bsf	___awdiv@quotient,0
  1165  0077                     l1062:
  1166  0077  3001               	movlw	1
  1167  0078                     u605:
  1168  0078  1003               	clrc
  1169  0079  0CA1               	rrf	___awdiv@divisor+1,f
  1170  007A  0CA0               	rrf	___awdiv@divisor,f
  1171  007B  3EFF               	addlw	-1
  1172  007C  1D03               	skipz
  1173  007D  2878               	goto	u605
  1174  007E                     l1064:
  1175  007E  3001               	movlw	1
  1176  007F  02A4               	subwf	___awdiv@counter,f
  1177  0080  1D03               	btfss	3,2
  1178  0081  2883               	goto	u611
  1179  0082  2884               	goto	u610
  1180  0083                     u611:
  1181  0083  285F               	goto	l1056
  1182  0084                     u610:
  1183  0084                     l1066:
  1184  0084  0825               	movf	___awdiv@sign,w
  1185  0085  1903               	btfsc	3,2
  1186  0086  2888               	goto	u621
  1187  0087  2889               	goto	u620
  1188  0088                     u621:
  1189  0088  288E               	goto	l1070
  1190  0089                     u620:
  1191  0089                     l1068:
  1192  0089  09A6               	comf	___awdiv@quotient,f
  1193  008A  09A7               	comf	___awdiv@quotient+1,f
  1194  008B  0AA6               	incf	___awdiv@quotient,f
  1195  008C  1903               	skipnz
  1196  008D  0AA7               	incf	___awdiv@quotient+1,f
  1197  008E                     l1070:
  1198  008E  0827               	movf	___awdiv@quotient+1,w
  1199  008F  00A1               	movwf	?___awdiv+1
  1200  0090  0826               	movf	___awdiv@quotient,w
  1201  0091  00A0               	movwf	?___awdiv
  1202  0092                     l329:
  1203  0092  0008               	return
  1204  0093                     __end_of___awdiv:
  1205                           
  1206                           	psect	text5
  1207  0149                     __ptext5:	
  1208 ;; *************** function _isr *****************
  1209 ;; Defined at:
  1210 ;;		line 63 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          4       0       0       0       0
  1227 ;;      Totals:         4       0       0       0       0
  1228 ;;Total ram usage:        4 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		Interrupt level 1
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _isr
  1239  0149                     _isr:
  1240  0149                     i1l974:
  1241                           
  1242                           ;main.c: 65:     if (T0IF == 1) {
  1243  0149  1D0B               	btfss	11,2	;volatile
  1244  014A  294C               	goto	u46_21
  1245  014B  294D               	goto	u46_20
  1246  014C                     u46_21:
  1247  014C  297F               	goto	i1l1002
  1248  014D                     u46_20:
  1249  014D                     i1l976:
  1250                           
  1251                           ;main.c: 66:         PORTBbits.RB2 = 0;
  1252  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1253  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1254  014F  1106               	bcf	6,2	;volatile
  1255                           
  1256                           ;main.c: 67:         PORTBbits.RB0 = 1;
  1257  0150  1406               	bsf	6,0	;volatile
  1258  0151                     i1l978:
  1259                           
  1260                           ;main.c: 68:         PORTD = (Table[Centenas]);
  1261  0151  0879               	movf	_Centenas,w
  1262  0152  3E2B               	addlw	(low (_Table| 0))& (0+255)
  1263  0153  0084               	movwf	4
  1264  0154  1383               	bcf	3,7	;select IRP bank0
  1265  0155  0800               	movf	0,w
  1266  0156  0088               	movwf	8	;volatile
  1267  0157                     i1l980:
  1268                           
  1269                           ;main.c: 69:         var4Displays = 0b00000001;
  1270  0157  3001               	movlw	1
  1271  0158  00B5               	movwf	_var4Displays
  1272  0159  3000               	movlw	0
  1273  015A  00B6               	movwf	_var4Displays+1
  1274  015B                     i1l982:
  1275                           
  1276                           ;main.c: 71:     if (var4Displays == 0b00000001) {
  1277  015B  0335               	decf	_var4Displays,w
  1278  015C  0436               	iorwf	_var4Displays+1,w
  1279  015D  1D03               	btfss	3,2
  1280  015E  2960               	goto	u47_21
  1281  015F  2961               	goto	u47_20
  1282  0160                     u47_21:
  1283  0160  296C               	goto	i1l990
  1284  0161                     u47_20:
  1285  0161                     i1l984:
  1286                           
  1287                           ;main.c: 72:         PORTBbits.RB0 = 0;
  1288  0161  1006               	bcf	6,0	;volatile
  1289                           
  1290                           ;main.c: 73:         PORTBbits.RB1 = 1;
  1291  0162  1486               	bsf	6,1	;volatile
  1292  0163                     i1l986:
  1293                           
  1294                           ;main.c: 74:         PORTD = (Table[Decenas]);
  1295  0163  0878               	movf	_Decenas,w
  1296  0164  3E2B               	addlw	(low (_Table| 0))& (0+255)
  1297  0165  0084               	movwf	4
  1298  0166  0800               	movf	0,w
  1299  0167  0088               	movwf	8	;volatile
  1300  0168                     i1l988:
  1301                           
  1302                           ;main.c: 75:         var4Displays = 0b00000010;
  1303  0168  3002               	movlw	2
  1304  0169  00B5               	movwf	_var4Displays
  1305  016A  3000               	movlw	0
  1306  016B  00B6               	movwf	_var4Displays+1
  1307  016C                     i1l990:
  1308                           
  1309                           ;main.c: 78:     if (var4Displays == 0b00000010) {
  1310  016C  3002               	movlw	2
  1311  016D  0635               	xorwf	_var4Displays,w
  1312  016E  0436               	iorwf	_var4Displays+1,w
  1313  016F  1D03               	btfss	3,2
  1314  0170  2972               	goto	u48_21
  1315  0171  2973               	goto	u48_20
  1316  0172                     u48_21:
  1317  0172  297C               	goto	i1l998
  1318  0173                     u48_20:
  1319  0173                     i1l992:
  1320                           
  1321                           ;main.c: 79:         PORTBbits.RB1 = 0;
  1322  0173  1086               	bcf	6,1	;volatile
  1323                           
  1324                           ;main.c: 80:         PORTBbits.RB2 = 1;
  1325  0174  1506               	bsf	6,2	;volatile
  1326  0175                     i1l994:
  1327                           
  1328                           ;main.c: 81:         PORTD = (Table[Unidades]);
  1329  0175  0837               	movf	_Unidades,w
  1330  0176  3E2B               	addlw	(low (_Table| 0))& (0+255)
  1331  0177  0084               	movwf	4
  1332  0178  0800               	movf	0,w
  1333  0179  0088               	movwf	8	;volatile
  1334  017A                     i1l996:
  1335                           
  1336                           ;main.c: 82:         var4Displays = 0b00000000;
  1337  017A  01B5               	clrf	_var4Displays
  1338  017B  01B6               	clrf	_var4Displays+1
  1339  017C                     i1l998:
  1340                           
  1341                           ;main.c: 85:     INTCONbits.T0IF = 0;
  1342  017C  110B               	bcf	11,2	;volatile
  1343  017D                     i1l1000:
  1344                           
  1345                           ;main.c: 86:     TMR0 = 255;
  1346  017D  30FF               	movlw	255
  1347  017E  0081               	movwf	1	;volatile
  1348  017F                     i1l1002:
  1349                           
  1350                           ;main.c: 89:     if (PIR1bits.ADIF == 1) {
  1351  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0181  1F0C               	btfss	12,6	;volatile
  1354  0182  2984               	goto	u49_21
  1355  0183  2985               	goto	u49_20
  1356  0184                     u49_21:
  1357  0184  2996               	goto	i1l73
  1358  0185                     u49_20:
  1359  0185                     i1l1004:
  1360                           
  1361                           ;main.c: 90:         if (ADCON0bits.CHS == 0)
  1362  0185  0C1F               	rrf	31,w	;volatile
  1363  0186  00F0               	movwf	??_isr
  1364  0187  0C70               	rrf	??_isr,w
  1365  0188  390F               	andlw	15
  1366  0189  3A00               	xorlw	0
  1367  018A  1D03               	skipz
  1368  018B  298D               	goto	u50_21
  1369  018C  298E               	goto	u50_20
  1370  018D                     u50_21:
  1371  018D  2991               	goto	i1l1008
  1372  018E                     u50_20:
  1373  018E                     i1l1006:
  1374                           
  1375                           ;main.c: 91:             PORTC = ADRESH;
  1376  018E  081E               	movf	30,w	;volatile
  1377  018F  0087               	movwf	7	;volatile
  1378  0190  2995               	goto	i1l1010
  1379  0191                     i1l1008:
  1380                           
  1381                           ;main.c: 93:             Counter = ADRESH;
  1382  0191  081E               	movf	30,w	;volatile
  1383  0192  00F0               	movwf	??_isr
  1384  0193  0870               	movf	??_isr,w
  1385  0194  00F6               	movwf	_Counter
  1386  0195                     i1l1010:
  1387                           
  1388                           ;main.c: 94:         PIR1bits.ADIF = 0;
  1389  0195  130C               	bcf	12,6	;volatile
  1390  0196                     i1l73:
  1391  0196  0873               	movf	??_isr+3,w
  1392  0197  008A               	movwf	10
  1393  0198  0872               	movf	??_isr+2,w
  1394  0199  0084               	movwf	4
  1395  019A  0E71               	swapf	??_isr+1,w
  1396  019B  0083               	movwf	3
  1397  019C  0EFE               	swapf	btemp,f
  1398  019D  0E7E               	swapf	btemp,w
  1399  019E  0009               	retfie
  1400  019F                     __end_of_isr:
  1401  007E                     btemp	set	126	;btemp
  1402  007E                     wtemp0	set	126
  1403                           
  1404                           	psect	intentry
  1405  0004                     __pintentry:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1408                           
  1409  0004                     interrupt_function:
  1410  007E                     saved_w	set	btemp
  1411  0004  00FE               	movwf	btemp
  1412  0005  0E03               	swapf	3,w
  1413  0006  00F1               	movwf	??_isr+1
  1414  0007  0804               	movf	4,w
  1415  0008  00F2               	movwf	??_isr+2
  1416  0009  080A               	movf	10,w
  1417  000A  00F3               	movwf	??_isr+3
  1418  000B  120A  118A  2949   	ljmp	_isr
  1419                           
  1420                           	psect	config
  1421                           
  1422                           ;Config register CONFIG1 @ 0x2007
  1423                           ;	Oscillator Selection bits
  1424                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1425                           ;	Watchdog Timer Enable bit
  1426                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1427                           ;	Power-up Timer Enable bit
  1428                           ;	PWRTE = OFF, PWRT disabled
  1429                           ;	RE3/MCLR pin function select bit
  1430                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1431                           ;	Code Protection bit
  1432                           ;	CP = OFF, Program memory code protection is disabled
  1433                           ;	Data Code Protection bit
  1434                           ;	CPD = OFF, Data memory code protection is disabled
  1435                           ;	Brown Out Reset Selection bits
  1436                           ;	BOREN = OFF, BOR disabled
  1437                           ;	Internal External Switchover bit
  1438                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1439                           ;	Fail-Safe Clock Monitor Enabled bit
  1440                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1441                           ;	Low Voltage Programming Enable bit
  1442                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1443                           ;	In-Circuit Debugger Mode bit
  1444                           ;	DEBUG = 0x1, unprogrammed default
  1445  2007                     	org	8199
  1446  2007  20D4               	dw	8404
  1447                           
  1448                           ;Config register CONFIG2 @ 0x2008
  1449                           ;	Brown-out Reset Selection bit
  1450                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1451                           ;	Flash Program Memory Self Write Enable bits
  1452                           ;	WRT = OFF, Write protection off
  1453  2008                     	org	8200
  1454  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _nibbles_separation->___awdiv
    _nibbles_separation->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_nibbles_separation
    _nibbles_separation->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                 _nibbles_separation
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nibbles_separation                                   3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nibbles_separation
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 13:09:38 2021

                          pc 0002                           l90 00ED                           l87 01D5  
               ___awdiv@sign 0025                           fsr 0004                          l342 0148  
                        l329 0092                          l800 01BC                          l810 01C1  
                        l802 01BD                          l820 01CC                          l812 01C2  
                        l804 01BE                          l830 01D4                          l822 01CD  
                        l814 01C3                          l806 01BF                          l824 01CE  
                        l816 01C6                          l808 01C0                          l826 01D0  
                        l818 01C9                          l770 01A9                          l828 01D3  
                        l780 01AE                          l772 01AA                          l764 019F  
                        l790 01B7                          l782 01B1                          l774 01AB  
                        l766 01A5                          l792 01B8                          l784 01B2  
                        l776 01AC                          l768 01A8                          l794 01B9  
                        l786 01B3                          l778 01AD                          l796 01BA  
                        l788 01B4                          l798 01BB                          u610 0084  
                        u530 0031                          u611 0083                          u531 0030  
                        u620 0089                          u540 003C                          u700 013A  
                        u621 0088                          u605 0078                          u541 003B  
                        u701 0139                          u550 004D                          u710 013F  
                        u630 00F5                          u551 004C                          u711 013E  
                        u631 00F4                          u640 0100                          u720 01E4  
                        u641 00FF                          u721 01E3                          u570 005F  
                        u650 010B                          u730 01ED                          u571 005E  
                        u651 010A                          u731 01EC                          u565 0051  
                        u590 0070                          u670 011D                          u591 006F  
                        u671 011C                          u680 0127                          u585 0060  
                        u681 0126                          u665 010F                          u595 006C  
                        u747 01F6                          u685 0123                          u695 012E  
                        _isr 0149                          fsr0 0004                          indf 0000  
               ___awmod@sign 0025                         l1100 012D                         l1030 002A  
                       l1102 0134                         l1040 003C                         l1032 002D  
                       l1104 013A                         l1112 0093                         l1120 01E4  
                       l1050 0050                         l1042 0041                         l1034 0031  
                       l1106 013F                         l1122 01ED                         l1130 01FB  
                       l1114 01D6                         l1060 0076                         l1052 0057  
                       l1044 0045                         l1036 0036                         l1108 0144  
                       l1124 01F0                         l1116 01DB                         l1070 008E  
                       l1062 0077                         l1054 005B                         l1046 0047  
                       l1038 0038                         l1126 01F4                         l1118 01DE  
                       l1064 007E                         l1056 005F                         l1048 004D  
                       l1080 00FA                         l1128 01F8                         l1058 0070  
                       l1066 0084                         l1090 010E                         l1082 00FC  
                       l1074 00EE                         l1068 0089                         l1092 0115  
                       l1084 0100                         l1076 00F1                         l1094 0119  
                       l1086 0105                         l1078 00F5                         l1096 011D  
                       l1088 010B                         l1098 0127                         ?_isr 0070  
                       _T0IF 005A                         i1l73 0196                         _TMR0 0001  
                       _main 01D6                         btemp 007E                         start 000E  
                      ??_isr 0070                        ?_main 0070              __end_of___awdiv 0093  
            __end_of___awmod 0149                        _ANSEL 0188              ___awdiv@divisor 0020  
                      i1l980 0157                        i1l990 016C                        i1l982 015B  
                      i1l974 0149                        i1l992 0173                        i1l984 0161  
                      i1l976 014D                        i1l994 0175                        i1l986 0163  
                      i1l978 0151                        i1l996 017A                        i1l988 0168  
                      i1l998 017C              ___awdiv@counter 0024                        u50_20 018E  
                      u50_21 018D                        _PORTA 0005                        _PORTB 0006  
                      _PORTC 0007                        _PORTD 0008                        u46_20 014D  
                      u46_21 014C                        u47_20 0161                        u47_21 0160  
                      u48_20 0173                        u48_21 0172                        u49_20 0185  
                      u49_21 0184                        _TRISC 0087                        _TRISD 0088  
                      _Table 002B                        _setup 019F                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 0011  
               __end_of_main 0204                       ??_main 0075                       _ADRESH 001E  
           ___awdiv@dividend 0022                       ?_setup 0070                       _ANSELH 0189  
                     i1l1000 017D                       i1l1010 0195                       i1l1002 017F  
                     i1l1004 0185                       i1l1006 018E                       i1l1008 0191  
                  ??___awdiv 0074                    ??___awmod 0074             ___awdiv@quotient 0026  
            ___awmod@divisor 0020              ___awmod@counter 0024           _nibbles_separation 0093  
                     saved_w 007E          ?_nibbles_separation 0070      __end_of__initialization 0026  
             __pcstackCOMMON 0070         ??_nibbles_separation 0028                 __pidataBANK0 0217  
              __end_of_setup 01D6               _OPTION_REGbits 0081                      ??_setup 0074  
                 __pbssBANK0 0035                   __pmaintext 01D6                   __pintentry 0004  
                    _Decenas 0078                      _Counter 0076                      ___awdiv 002A  
                    ___awmod 00EE                      _Storage 0077                      __ptext1 019F  
                    __ptext2 0093                      __ptext3 00EE                      __ptext4 002A  
                    __ptext5 0149                 __size_of_isr 0056             ___awmod@dividend 0022  
       end_of_initialization 0026                    _PORTBbits 0006                    _TRISAbits 0085  
                  _TRISBbits 0086          start_initialization 0011                  __end_of_isr 019F  
__size_of_nibbles_separation 005B                   init_fetch0 0204                  __pdataBANK0 002B  
               _var4Displays 0035                  __pbssCOMMON 0076                    ___latbits 0002  
              __pcstackBANK0 0020                     ?___awdiv 0020                     ?___awmod 0020  
             __size_of_setup 0037            interrupt_function 0004                     _PIE1bits 008C  
                   _PIR1bits 000C                   _ADCON0bits 001F                   _ADCON1bits 009F  
                   _Centenas 0079                     _Unidades 0037             __size_of___awdiv 0069  
           __size_of___awmod 005B                __size_of_main 002E                   _INTCONbits 000B  
                   init_ram0 0208                     intlevel1 0000   __end_of_nibbles_separation 00EE  
                 _OSCCONbits 008F  
